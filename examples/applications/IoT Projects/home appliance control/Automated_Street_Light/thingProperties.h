// Code generated by Arduino IoT Cloud, DO NOT EDIT.
// This file contains the automatically generated properties and callbacks for your Thing.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>

// Your WiFi credentials (SSID and password) are defined in arduino_secrets.h
// These are automatically included by ArduinoIoTCloud.h
const char SSID[]     = SECRET_SSID;
const char PASS[]     = SECRET_OPTIONAL_PASS;

// Forward declarations for your callback functions
void onStreetlightOnChange();
void onAutoModeEnabledChange();
void onOnTimeChange();
void onOffTimeChange();
void onLightThresholdChange();

// Cloud variables
char currentTime[20];       // Current time string (e.g., "HH:MM:SS") (Read-only)
int ambientLight;           // Current ambient light level from LDR (e.g., 0-1023) (Read-only)
bool streetlightOn;         // Controls the streetlight (manual ON/OFF, or status in auto) (Read & Write)
bool autoModeEnabled;       // Toggles between automatic (LDR/Time) and manual control (Read & Write)
bool statusLedState;        // Reflects the state of the physical mode indicator LED (Read-only)
char onTime[6];             // Time to automatically turn ON streetlight (e.g., "18:00") (Read & Write)
char offTime[6];            // Time to automatically turn OFF streetlight (e.g., "06:00") (Read & Write)
int lightThreshold;         // LDR value threshold for automatic ON/OFF (Read & Write)

void initProperties(){

  // Initialize Cloud properties and link them to their respective callbacks
  ArduinoCloud.addProperty(currentTime, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(ambientLight, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(streetlightOn, READWRITE, ON_CHANGE, onStreetlightOnChange);
  ArduinoCloud.addProperty(autoModeEnabled, READWRITE, ON_CHANGE, onAutoModeEnabledChange);
  ArduinoCloud.addProperty(statusLedState, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(onTime, READWRITE, ON_CHANGE, onOnTimeChange);
  ArduinoCloud.addProperty(offTime, READWRITE, ON_CHANGE, onOffTimeChange);
  ArduinoCloud.addProperty(lightThreshold, READWRITE, ON_CHANGE, onLightThresholdChange);

}

// Initialize the WiFi connection handler
WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
